knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(AnnotationHub)
ah <- AnnotationHub()
ensdb <- ah[["AH89211"]] # mouse ensembldb object
genome <- ah[["AH68356"]]
chr19 <- import(genome)["19"]
gc()
remove(genome)
library(AnnotationHub)
ah <- AnnotationHub()
ensdb <- ah[["AH89211"]] # mouse ensembldb object
genome <- ah[["AH68356"]]
chr19 <- import(genome)["19"]
gc()
install.packages("magick")
genesData <- genes(ensdb)
geneNames <- genesData$gene_name
geneNamesSorted <- sort(geneNames)
geneNamesSorted[3000:4000]
# get AP1 motif
motif <- query(MotifDb, c("AP-1","Mus"))
suppressPackageStartupMessages({
library(epiwraps)
#library(AnnotationHub)
library(MotifDb)
#library(memes)
library(universalmotif)
library(ensembldb)
library(ggplot2)
})
#ah <- AnnotationHub()
#ensdb <- ah[["AH89211"]] # mouse ensembldb object
genesData <- genes(ensdb)
geneNames <- genesData$gene_name
geneNamesSorted <- sort(geneNames)
geneNamesSorted[3000:4000]
# get AP1 motif
motif <- query(MotifDb, c("AP-1","Mus"))
names(motif)
# get ATF2 motif
motif <- query(MotifDb, c("ATF2","Mus"))
names(motif)
motif <- motif[[2]]
view_motifs(motif)
motif2 <- convert_motifs(motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi <- motifmatchr::matchMotifs(motif2, chr19, out="positions", p.cutoff=1e-5)[[1]]
# convert to GRanges (when using motifmatchr)
moi <- as(setNames(moi,names(chr19)), "GRanges")
# we prepare the list of tracks
tracks <- c("All cuts"="full_cuts.bw", "NF cuts"="NF_cuts.bw", "Mono centers"="mono_centers.bw")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm <- signal2Matrix(tracks, moi, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb <- rescaleSignalMatrices(sm, nf)
plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"))
# get Foxa2 motif
motifsFoxa2 <- query(MotifDb, c("Foxa2","Mus"))
names(motifsFoxa2)
Foxa2motif <- motifsFoxa2[[5]]
view_motifs(Foxa2motif)
motif3 <- convert_motifs(Foxa2motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi2 <- motifmatchr::matchMotifs(motif3, chr19, out="positions", p.cutoff=1e-5)[[1]]
# convert to GRanges (when using motifmatchr)
moi2 <- as(setNames(moi2,names(chr19)), "GRanges")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm2 <- signal2Matrix(tracks, moi2, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm2, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf2 <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb2 <- rescaleSignalMatrices(sm2, nf2)
plotEnrichedHeatmaps(smb2, trim=0.95, colors = c("white","darkred"))
motif3 <- convert_motifs(Foxa2motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi2 <- motifmatchr::matchMotifs(motif3, chr19, out="positions", p.cutoff=1e-4)[[1]]
# convert to GRanges (when using motifmatchr)
moi2 <- as(setNames(moi2,names(chr19)), "GRanges")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm2 <- signal2Matrix(tracks, moi2, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm2, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf2 <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb2 <- rescaleSignalMatrices(sm2, nf2)
plotEnrichedHeatmaps(smb2, trim=0.95, colors = c("white","darkred"))
motif2 <- convert_motifs(motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi <- motifmatchr::matchMotifs(motif2, chr19, out="positions", p.cutoff=1e-4)[[1]]
# convert to GRanges (when using motifmatchr)
moi <- as(setNames(moi,names(chr19)), "GRanges")
# we prepare the list of tracks
tracks <- c("All cuts"="full_cuts.bw", "NF cuts"="NF_cuts.bw", "Mono centers"="mono_centers.bw")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm <- signal2Matrix(tracks, moi, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb <- rescaleSignalMatrices(sm, nf)
plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"))
motif2 <- convert_motifs(motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi <- motifmatchr::matchMotifs(motif2, chr19, out="positions", p.cutoff=1e-5)[[1]]
# convert to GRanges (when using motifmatchr)
moi <- as(setNames(moi,names(chr19)), "GRanges")
# we prepare the list of tracks
tracks <- c("All cuts"="full_cuts.bw", "NF cuts"="NF_cuts.bw", "Mono centers"="mono_centers.bw")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm <- signal2Matrix(tracks, moi, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb <- rescaleSignalMatrices(sm, nf)
plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"))
motif3 <- convert_motifs(Foxa2motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi2 <- motifmatchr::matchMotifs(motif3, chr19, out="positions", p.cutoff=1e-5)[[1]]
# convert to GRanges (when using motifmatchr)
moi2 <- as(setNames(moi2,names(chr19)), "GRanges")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm2 <- signal2Matrix(tracks, moi2, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm2, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf2 <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb2 <- rescaleSignalMatrices(sm2, nf2)
plotEnrichedHeatmaps(smb2, trim=0.95, colors = c("white","darkred"))
motif3 <- convert_motifs(Foxa2motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi2 <- motifmatchr::matchMotifs(motif3, chr19, out="positions", p.cutoff=1e-4)[[1]]
# convert to GRanges (when using motifmatchr)
moi2 <- as(setNames(moi2,names(chr19)), "GRanges")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm2 <- signal2Matrix(tracks, moi2, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm2, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf2 <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb2 <- rescaleSignalMatrices(sm2, nf2)
plotEnrichedHeatmaps(smb2, trim=0.95, colors = c("white","darkred"))
motifsSox2 <- query(MotifDb, c("Sox2","Mus"))
names(motifsSox2)
Sox2motif <- motifsSox2[[13]]
view_motifs(Sox2motif)
motifsSox2 <- query(MotifDb, c("Sox2","Mus"))
names(motifsSox2)
Sox2motif <- motifsSox2[[13]]
view_motifs(Sox2motif)
motif4 <- convert_motifs(Foxa2motif, class="TFBSTools-PFMatrix")
#genome <- ah[["AH68356"]]
# This destroys my RAM
# get the sequence for chr19:
#chr19 <- import(genome)["19"]
#Writing to FASTA first and loading again
#writeXStringSet(chr19, "chr19.fa")
# find motif occurences
# here we could use any of the 3 methods we've seen: memes::runFimo, findMotifInstances, or this:
moi3 <- motifmatchr::matchMotifs(motif4, chr19, out="positions", p.cutoff=1e-5)[[1]]
# convert to GRanges (when using motifmatchr)
moi3 <- as(setNames(moi3,names(chr19)), "GRanges")
# extract signals around the motif occurences
# we zoom in to 500bp around the motif centers, in windows of 5bp
sm3 <- signal2Matrix(tracks, moi2, w=5, extend=500)
# plot the signals:
#plotEnrichedHeatmaps(sm2, trim=0.95, colors = c("white","darkred"))
# we renormalize using border backgrounds
#smb <- renormalizeBorders(sm)
#plotEnrichedHeatmaps(smb, trim=0.95, colors = c("white","darkred"), minRowVal = 20)
# the right to do this, however, is using a background normalization
# this we can do for instance using:
nf3 <- bwNormFactors(tracks, useSeqLevels="19", nwind=5000L)
# then we apply the normalization factors:
smb3 <- rescaleSignalMatrices(sm3, nf3)
plotEnrichedHeatmaps(smb3, trim=0.95, colors = c("white","darkred"))

1-pbinom(13,50,0.16666666666666666666666666666667,)
dbinom(13,50,0.16666666666666666666666666666667,)
dbinom(13,50,0.16666666666666666666666666666667,)
pbinom(13,50,0.16666666666666666666666666666667,)
1-pbinom(13,50,0.16666666666666666666666666666667,)
pbinom(13,50,0.16666666666666666666666666666667,)
pbinom(13,50,0.16666666666666666666666666666667,)
pbinom(14,50,0.16666666666666666666666666666667,)
pbinom(40,50,0.16666666666666666666666666666667,)
pbinom(1,50,0.16666666666666666666666666666667,)
pbinom(14,50,0.16666666666666666666666666666667,)
dbinom(14,50,0.16666666666666666666666666666667,)
dbinom(12,50,0.16666666666666666666666666666667,)
1-pbinom(13,50,0.16666666666666666666666666666667,)
1-pbinom(14,50,0.16666666666666666666666666666667,)
1-pbinom(22,26,0.6)
1-pbinom(20,26,0.6)
1-pbinom(18,26,0.6)
1-pbinom(19,26,0.6)
1-pbinom(20,26,0.6)
pbinom(18,27,0.8)
1-pbinom(16,33,0.35)
1-pbinom(15,33,0.35)
1-pbinom(3,12,0.1)
1-pbinom(2,12,0.1)
pbinom(11,26,0.7)
1-pbinom()
1-pbinom(20,38,0.15)
pbinom(6,21,0.35)
1-pbinom(7,28,0.2)
1-pbinom(20,38,.4)
1-pbinom(10,21,.35)
pbinom(3,11,.5)
pbinom(19,25,0.45)
1-pbinom(21,39,.5)
1-pbinom(18,29,.1)
dbinom(10,57,.298)
binom.test(13,70,.1857)
x <- c(1,2,3,4,5)
y <- c(1.1, 1.9, 3, 4.1, 4.9)
plot(x,y)
lm(y~x)
installr
installr: install.packages("installr")
install.packages("installr")
library(installr)
updateR()
data <- read.csv("nwRel.csv")
data <- read.csv("C:/Users/Laurin Schaller/Desktop/ETH/Statistik II/Q1/nwRel.csv")
View(data)
data$Kategorie == "Gemüse/Gemüse frisch"
gemuese <- data$Kategorie == "Gemüse/Gemüse frisch"
gemuese <- data$Kategorie == "Gemüse/Gemüse frisch"
data$Kategorie == "Gemüse/Gemüse frisch"
gemuese[TRUE]
gemuese[x==TRUE]
gemuese[gemuese==TRUE]
data$EnergieKCAL
max(data$EnergieKCAL)
data$EnergieKCAL == 0.3913043
data[EnergieKCAL == 0.3913043]
data %>% filter(EnergieKCAL == 0.3913043)
gemuese <- filter(EnergieKCAL == 0.3913043)
filter(data,EnergieKCAL == 0.3913043)
gemuese <- filter(data,EnergieKCAL == 0.3913043)
View(data)
View(data)
load("C:/Users/Laurin Schaller/Downloads/datenU3/data/ueb222178.rda")
View(data)
View(data)
View(dat)
View(dat)
View(dat)
load("C:/Users/Laurin Schaller/Desktop/ETH/Statistik II/Q4/datenU4/ueb455154.rda")
View(dat)
View(dat)
View(dat1)
View(dat1)
dat
View(dat)
View(dat)
View(dat1)
View(dat1)
fit0 <- lm(y ≥ 1, data = dat)
summary(fit0)
fit0 <- lm(y ~ 1, data = dat)
summary(fit0)
fit0 <- lm(y ~ 2, data = dat)
summary(fit0)
1
1
fit0 <- lm(y ~ 1, data = dat)
summary(fit0)
View(dat)
View(dat)
View(dat)
View(dat)
fit1 <- lm(y ~ x1 + x2 + x3, data = dat)
summary(fit1)
mean(fit1$residuals^2)
fit2 <- lm(y ~ x1, data = dat)
summary(fit2)
mean(fit2$residuals^2)
mean(fit2$residuals^2) - mean(fit1$residuals^2)
library(leaps)
install.packages("leaps")
install.packages("leaps")
library(leaps)
fit0$cid
s1 <- summary(fit0)
s1$cid
s1
best <- regsubsets(y ~ 1, dat, method = "exhaustive", nvmax = 1)
best <- regsubsets(y ~ ., dat, method = "exhaustive", nvmax = 8)
summary(best)
s <- summary(best)
bic <- s$bic
which.min(bic)
bic
velo <- read.csv("Downloads/velo.csv", header=TRUE)
velo <- read.csv("c:/Benutzer/Laurin Schaller/Downloads/velo.csv", header=TRUE)
velo <- read.csv("C:/Benutzer/Laurin Schaller/Downloads/velo.csv", header=TRUE)
velo <- read.csv("C:\Users\Laurin Schaller\Downloads\velo.csv", header=TRUE)
velo <- read.csv("C:/Users/Laurin Schaller/Downloads/velo.csv", header=TRUE)
View(velo)
View(velo)
velo$x > 3
fit1 <- lm(y ~ x, data=velo)
summary(fit1)
clear
clear()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
help("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
?BiocManager::version
?BiocManager::version()
BiocManager::version()
library()
remove.packages("BiocVersion")
remove.packages("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
install.packages(c("gsl","ggplot2","remotes"))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("GenomicRanges", "rtracklayer", "EnrichedHeatmap", "AnnotationHub",
"ensembldb", "edgeR", "esATAC", "sechm","genomation","Rsubread","Rfastp"))
BiocManager::install("ETHZ-INS/epiwraps")
BiocManager::install("ETHZ-INS/epiwraps")
install.packages("rmarkdown")
install.packages(c("gsl","ggplot2","remotes"))
BiocManager::install(c("GenomicRanges", "rtracklayer", "EnrichedHeatmap", "AnnotationHub",
"ensembldb", "edgeR", "esATAC", "sechm","genomation","Rsubread","Rfastp"))
BiocManager::install("ETHZ-INS/epiwraps")
library(epiwraps)
sessionInfo()
library(Rfastp)
dir.create("raw")
download.file("https://www.encodeproject.org/files/ENCFF014MOQ/@@download/ENCFF014MOQ.fastq.gz", dest="raw/Myc.fastq.gz")
dir.create("raw")
download.file("https://www.encodeproject.org/files/ENCFF014MOQ/@@download/ENCFF014MOQ.fastq.gz", dest="raw/Myc.fastq.gz")
download.file("https://www.encodeproject.org/files/ENCFF179TMO/@@download/ENCFF179TMO.fastq.gz", dest="raw/input.fastq.gz")
options(timeout=100000)
dir.create("raw")
download.file("https://www.encodeproject.org/files/ENCFF014MOQ/@@download/ENCFF014MOQ.fastq.gz", dest="raw/Myc.fastq.gz")
download.file("https://www.encodeproject.org/files/ENCFF179TMO/@@download/ENCFF179TMO.fastq.gz", dest="raw/input.fastq.gz")
getwd()
clear()
suppressPackageStartupMessages({
library(AnnotationHub)
library(rtracklayer)
library(epiwraps)
library(GenomicRanges)
})
ah <- AnnotationHub()
download.file("https://ethz-ins.org/content/Myc_dm_subset.zip", "Myc_dm_subset.zip")
download.file("https://ethz-ins.org/content/Myc_dm_subset.zip", "Myc_dm_subset.zip")
?download
download.file
downloa?d.file
?download.file
options(timeout = max(999999, getOption("timeout")))
download.file("https://ethz-ins.org/content/Myc_dm_subset.zip", "Myc_dm_subset.zip", extra = )
unzip("Myc_dm_subset.zip")
setwd("C:/Users/Laurin Schaller/Desktop/ETH/Bioinformatic approaches/ethEpigen2023_materials/week05")
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(AnnotationHub)
library(ensembldb)
library(GenomicRanges)
library(epiwraps)
library(rtracklayer)
library(ggplot2)
})
?gunzip
getwd()
options(timeout=999999)
download.file("https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSM1000131&format=file&file=GSM1000131%5Fmm9%5FwgEncodeLicrHistoneHeartH3k27me3MAdult8wksC57bl6StdPk%2EbroadPeak%2Egz", "heart_H3K27me3.broadPeak.gz")
download.file("https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSM769017&format=file&file=GSM769017%5FwgEncodeLicrHistoneHeartH3k4me3MAdult8wksC57bl6StdPk%2EbroadPeak%2Egz", "heart_H3K4me3.broadPeak.gz")
peaksH3K27me3 <- rtracklayer::import("../week05/encode/H3K27me3.broadpeak")
peaksH3K27me3 <- rtracklayer::import("../week04/encode/H3K27me3.broadpeak")
peaksH3K4me3<- rtracklayer::import("../week04/encode/H3K4me3.broadpeak")
bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
table(bivalentPeaks1)
table(bivalentPeaks2)
table(bivalentPeaks1)
table(bivalentPeaks2)
bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
table(bivalentPeaks1)
table(bivalentPeaks2)
View(peaksH3K27me3)
View(peaksH3K27me3)
head(peaksH3K27me3)
?overlapsAny
bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
View(bivalentGRangesH3K27me3)
View(bivalentGRangesH3K27me3)
head(bivalentGRangesH3K27me3)
head(bivalentGRangesH3K4me3)
bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
head(bivalentGRangesH3K27me3)
head(bivalentGRangesH3K4me3)
length(bivalentGRangesH3K27me3)
length(bivalentGRangesH3K4me3)
bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
length(bivalentGRangesH3K27me3)
length(bivalentGRangesH3K4me3)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(AnnotationHub)
library(ensembldb)
library(GenomicRanges)
library(epiwraps)
library(rtracklayer)
library(ggplot2)
})
peaksH3K27me3 <- rtracklayer::import("../week04/encode/H3K27me3.broadpeak")
peaksH3K4me3<- rtracklayer::import("../week04/encode/H3K4me3.broadpeak")
bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
table(bivalentPeaks1)
table(bivalentPeaks2)
bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
length(bivalentGRangesH3K27me3)
length(bivalentGRangesH3K4me3)
peaksHeartH3K27me3 <- rtracklayer::import("H3K27me3.broadpeak")
peaksHeartH3K27me3 <- rtracklayer::import("H3K27me3.broadPeak")
getwd()
peaksHeartH3K27me3 <- rtracklayer::import("heart_H3K27me3.broadPeak")
peaksHeartH3K4me3<- rtracklayer::import("heart_H3K4me3.broadPeak")
?regionOverlaps
?overlapsAny
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
bivalentPeaks1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
table(bivalentPeaks1)
head(bivalentPeaks1)
head(bivalentPeaks1)
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
bivalentPeaks1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(bivalentPeaks1)
head(bivalentPeaks2)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
library(ChIPpeakAnno)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(as(peaksmESC[mESCOverlap1]))
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3, ignore.strand = TRUE)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3, ignore.strand = TRUE)
head(mESCOverlap1)
head(mESCOverlap2)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(as(peaksmESC[mESCOverlap1]))
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(AnnotationHub)
library(ensembldb)
library(GenomicRanges)
library(epiwraps)
library(rtracklayer)
library(ggplot2)
})
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(AnnotationHub)
library(ensembldb)
library(GenomicRanges)
library(epiwraps)
library(rtracklayer)
library(ggplot2)
})
peaksH3K27me3 <- rtracklayer::import("../week04/encode/H3K27me3.broadpeak")
peaksH3K4me3<- rtracklayer::import("../week04/encode/H3K4me3.broadpeak")
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
head(peaksmESC)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
head(peaksmESC)
#bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
length(mESCOverlap1)
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
head(peaksmESC)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1])
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
head(peaksmESC)
bivalentPeaksmESC <- as(peaksmESC[mESCOverlap1], "GRanges")
?reduce
#old code
#bivalentGRangesH3K27me3 <- peaksH3K27me3[bivalentPeaks2]
#bivalentGRangesH3K4me3 <- peaksH3K4me3[bivalentPeaks1]
#head(bivalentGRangesH3K27me3)
#head(bivalentGRangesH3K4me3)
#length(bivalentGRangesH3K27me3)
#length(bivalentGRangesH3K4me3)
peaksmESC <- c(peaksH3K4me3, peaksH3K27me3)
head(peaksmESC)
bivalentPeaksmESC <- reduce(peaksmESC[mESCOverlap1], "GRanges")
peaksH3K4me3[4], peaksH3K27me3[9]
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
peaksH3K4me3[4]
peaksH3K27me3[9]
length(mESCOverlap1)
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
peaksH3K4me3[4]
peaksH3K27me3[9]
length(mESCOverlap1)
mESCOverlap1$queryHits
mESCOverlap1['queryHits']
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
peaksH3K4me3[4]
peaksH3K27me3[9]
length(mESCOverlap1)
mESCOverlap1[,1]
mESCOverlap1[1]
mESCOverlap1[1][2]
mESCOverlap1[1][1]
mESCOverlap1
peaksH3K4me3[mESCOverlap1]
#bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
#bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
#table(bivalentPeaks1)
#table(bivalentPeaks2)
mESCOverlap1 <- findOverlaps(peaksH3K4me3, peaksH3K27me3)
mESCOverlap2 <- findOverlaps(peaksH3K27me3, peaksH3K4me3)
head(mESCOverlap1)
head(mESCOverlap2)
peaksH3K4me3[4]
peaksH3K27me3[9]
length(mESCOverlap1)
bivalentPeaks1 <- overlapsAny(peaksH3K4me3, peaksH3K27me3)
bivalentPeaks2 <- overlapsAny(peaksH3K27me3, peaksH3K4me3)
table(bivalentPeaks1)
table(bivalentPeaks2)
